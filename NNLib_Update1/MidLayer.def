Component Builder 2.0
COMPONENT-BUILDER-OPTIONS:
  COMPONENT-MODE:        CTL
  AUTO-UPDATE-FILE-DEFN: true
  SHOW-NODE-NAMES:       false
  DEFAULT-FONT-SIZE:     10

PARAMETERS:
  SECTION: "CONFIGURATION"
    ctrlGrp "Assigned Control Group" "" 0 INTEGER 1 1 54
    Pri     "Priority Level"         "" 0 INTEGER 1 1
  SECTION: "ParameterSelection"
    numInputs  "Description" ""                     0 INTEGER 1 1 6
    numOutputs "Description" ""                     0 INTEGER 1 1 6
    activation "Description" "LINEAR;TANH;RELU;SIG" 0 TOGGLE  1

GRAPHICS:
  Box(-32,-280,56,240)
  Line(56,-8,56,-8)
  Line(56,-8,56,-8)
  Line(56,-8,56,-8)
  Line(56,-8,56,-8)
  Line(-32,-256,-96,-256)
  If (numInputs > 1)
    Line(-32,-224,-96,-224)
    FontSize(10)
    FText(-72,-216,"Input 2")
    Line(56,-224,128,-224)
    FontSize(10)
    FText(112,-216,"Li2")
    If (numInputs > 2)
      Line(-32,-192,-96,-192)
      FontSize(10)
      FText(-72,-184,"Input3")
      Line(56,-192,128,-192)
      FontSize(10)
      FText(112,-184,"Li3")
      If (numInputs>3)
        Line(-32,-160,-96,-160)
        FontSize(10)
        FText(-72,-152,"input4")
        Line(56,-160,128,-160)
        FontSize(10)
        FText(112,-152,"Li4")
        If (numInputs>4)
          Line(-32,-128,-96,-128)
          FontSize(10)
          FText(-72,-120,"input5")
          Line(56,-128,128,-128)
          FontSize(10)
          FText(112,-120,"Li5")
          If (numInputs>5)
            Line(-32,-96,-96,-96)
            FontSize(10)
            FText(-72,-88,"input6")
            Line(56,-96,128,-96)
            FontSize(10)
            FText(112,-88,"Li6")
          EndIf
        EndIf
      EndIf
    EndIf
  EndIf
  Line(-32,192,-96,192)
  Line(56,32,128,32)
  FontSize(10)
  FText(-72,208,"Learning Rate")
  FontSize(10)
  FText(112,40,"y1")
  FontSize(10)
  FText(-72,-248,"Input1")
  If (numOutputs > 1)
    Line(56,64,128,64)
    FontSize(10)
    FText(112,72,"y2")
    Line(-32,32,-96,32)
    FontSize(10)
    FText(-80,40,"L2")
    If (numOutputs> 2)
      Line(56,96,128,96)
      FontSize(10)
      FText(112,104,"y3")
      Line(-32,64,-96,64)
      FontSize(10)
      FText(-80,72,"L3")
      If (numOutputs>3)
        Line(56,128,128,128)
        FontSize(10)
        FText(112,136,"y4")
        Line(-32,96,-96,96)
        FontSize(10)
        FText(-80,104,"L4")
        If (numOutputs>4)
          Line(56,160,128,160)
          FontSize(10)
          FText(112,168,"y5")
          Line(-32,128,-96,128)
          FontSize(10)
          FText(-80,136,"L5")
          If (numOutputs> 5)
            Line(56,192,128,192)
            FontSize(10)
            FText(112,200,"y6")
            Line(-32,160,-96,160)
            FontSize(10)
            FText(-80,168,"L6")
          EndIf
        EndIf
      EndIf
    EndIf
  EndIf
  Line(-32,0,-96,0)
  FontSize(10)
  FText(-80,8,"L1")
  Line(56,-256,128,-256)
  FontSize(10)
  FText(112,-248,"Li1")
  Line(-32,224,-96,224)
  FontSize(10)
  FText(-72,240,"lambda")

NODES:
  INITIALIZE_NODE Learning_rate = _dud_
  INITIALIZE_NODE foutput       = _dud_
  INITIALIZE_NODE Li1           = _dud_
  INITIALIZE_NODE input1        = _dud_
  INITIALIZE_NODE L1            = _dud_
  INITIALIZE_NODE input2        = _dud_
  INITIALIZE_NODE Li2           = _dud_
  INITIALIZE_NODE input3        = _dud_
  INITIALIZE_NODE Li3           = _dud_
  INITIALIZE_NODE input4        = _dud_
  INITIALIZE_NODE Li4           = _dud_
  INITIALIZE_NODE input5        = _dud_
  INITIALIZE_NODE Li5           = _dud_
  INITIALIZE_NODE input6        = _dud_
  INITIALIZE_NODE Li6           = _dud_
  INITIALIZE_NODE foutput2      = _dud_
  INITIALIZE_NODE L2            = _dud_
  INITIALIZE_NODE foutput3      = _dud_
  INITIALIZE_NODE L3            = _dud_
  INITIALIZE_NODE L4            = _dud_
  INITIALIZE_NODE foutput4      = _dud_
  INITIALIZE_NODE foutput5      = _dud_
  INITIALIZE_NODE L5            = _dud_
  INITIALIZE_NODE foutput6      = _dud_
  INITIALIZE_NODE L6            = _dud_
  INITIALIZE_NODE lamm          = _dud_

  Learning_rate -3 6 INPUT REAL
  foutput 4 1 OUTPUT REAL
  Li1 4 -8 OUTPUT REAL
  input1 -3 -8 INPUT REAL
  L1 -3 0 INPUT REAL
  #IF numInputs>1
    input2 -3 -7 INPUT REAL
    Li2 4 -7 OUTPUT REAL
    #IF numInputs>2
      input3 -3 -6 INPUT REAL
      Li3 4 -6 OUTPUT REAL
      #IF numInputs>3
        input4 -3 -5 INPUT REAL
        Li4 4 -5 OUTPUT REAL
        #IF numInputs>4
          input5 -3 -4 INPUT REAL
          Li5 4 -4 OUTPUT REAL
          #IF numInputs>5
            input6 -3 -3 INPUT REAL
            Li6 4 -3 OUTPUT REAL
          #END
        #END
      #END
    #END
  #END
  #IF numOutputs>1
    foutput2 4 2 OUTPUT REAL
    L2 -3 1 INPUT REAL
    #IF numOutputs>2
      foutput3 4 3 OUTPUT REAL
      L3 -3 2 INPUT REAL
      #IF numOutputs>3
        L4 -3 3 INPUT REAL
        foutput4 4 4 OUTPUT REAL
        #IF numOutputs>4
          foutput5 4 5 OUTPUT REAL
          L5 -3 4 INPUT REAL
          #IF numOutputs>5
            foutput6 4 6 OUTPUT REAL
            L6 -3 5 INPUT REAL
          #END
        #END
      #END
    #END
  #END
  lamm -3 7 INPUT REAL

VALVE-GROUP:
  #IF activation==LINEAR
    RTDS.CTL.RISC_CMODEL
        V4COMP: ModelName = MidLayerLinear SubSystem = $SS Processor = $ctrlGrp Priority = $Pri
        DATA_SIZES: INTDATA=3 FLOATDATA=0 CHARDATA_FRMT=0 INVARS=14 OUTVARS=12
        INTDATA: $numInputs numInputs $numOutputs numOutputs $activation activation
        INVARS: $Learning_rate IEEE Learning_rate $input1 IEEE input1 $L1 IEEE L1 $input2 IEEE input2 $input3 IEEE input3
        INVARS: $input4 IEEE input4 $input5 IEEE input5 $input6 IEEE input6 $L2 IEEE L2 $L3 IEEE L3
        INVARS: $L4 IEEE L4 $L5 IEEE L5 $L6 IEEE L6 $lamm IEEE lamm
        OUTVARS: $foutput IEEE foutput $Li1 IEEE Li1 $Li2 IEEE Li2 $Li3 IEEE Li3 $Li4 IEEE Li4
        OUTVARS: $Li5 IEEE Li5 $Li6 IEEE Li6 $foutput2 IEEE foutput2 $foutput3 IEEE foutput3 $foutput4 IEEE foutput4
        OUTVARS: $foutput5 IEEE foutput5 $foutput6 IEEE foutput6
    END

  #ELSE 
    RTDS.CTL.RISC_CMODEL
        V4COMP: ModelName = MidLayerTanh SubSystem = $SS Processor = $ctrlGrp Priority = $Pri
        DATA_SIZES: INTDATA=9 FLOATDATA=0 CHARDATA_FRMT=0 INVARS=13 OUTVARS=12
        INTDATA: $numInputs numInputs $numOutputs numOutputs $type type $numLayers numLayers $numNodes numNodes
        INTDATA: $numWeights numWeights $timesteps timesteps $activation activation $batch_size batch_size
        INVARS: $Learning_rate IEEE Learning_rate $input1 IEEE input1 $L1 IEEE L1 $input2 IEEE input2 $input3 IEEE input3
        INVARS: $input4 IEEE input4 $input5 IEEE input5 $input6 IEEE input6 $L2 IEEE L2 $L3 IEEE L3
        INVARS: $L4 IEEE L4 $L5 IEEE L5 $L6 IEEE L6
        OUTVARS: $foutput IEEE foutput $Li1 IEEE Li1 $Li2 IEEE Li2 $Li3 IEEE Li3 $Li4 IEEE Li4
        OUTVARS: $Li5 IEEE Li5 $Li6 IEEE Li6 $foutput2 IEEE foutput2 $foutput3 IEEE foutput3 $foutput4 IEEE foutput4
        OUTVARS: $foutput5 IEEE foutput5 $foutput6 IEEE foutput6
    END

  #END 
COMPONENT-DESCRIPTORS:
  CLASSIFICATION: GENERAL
  PHASES:         N/A
  MAINSTEP:       YES
  SUBSTEP:        NO
  SUPERSTEP:      NO
  SMALLDT:        NO
  GPES:           NO
  TWRT:           NO
  DIST:           NO
  DEPRECATED:     NO

