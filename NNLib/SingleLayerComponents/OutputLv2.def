Component Builder 2.0
COMPONENT-BUILDER-OPTIONS:
  COMPONENT-MODE:        CTL
  AUTO-UPDATE-FILE-DEFN: true
  SHOW-NODE-NAMES:       false
  DEFAULT-FONT-SIZE:     10

PARAMETERS:
  SECTION: "CONFIGURATION"
    ctrlGrp "Assigned Control Group" "" 0 INTEGER 1 1 54
    Pri     "Priority Level"         "" 0 INTEGER 1 1
  SECTION: "ParameterSelection"
    numInputs  "Description" "" 0 INTEGER 1 1 10
    numOutputs "Description" "" 0 INTEGER 1 1 6
  SECTION: "DenseOutput"
    AddDense    "Description" ""                     0 INTEGER 0 0 1
    CrossCouple "Description" ""                     0 INTEGER 0 0 1
    activation  "Description" "LINEAR;TANH;RELU;SIG" 0 TOGGLE  0

GRAPHICS:
  Box(-32,-280,64,360)
  Line(56,-72,56,-72)
  Line(56,-72,56,-72)
  Line(-32,-256,-96,-256)
  Line(-32,288,-96,288)
  FontSize(10)
  FText(-64,304,"Learning Rate")
  FontSize(10)
  FText(-72,-248,"Input1")
  Line(64,-256,128,-256)
  FontSize(10)
  FText(112,-248,"y1")
  Line(-32,320,-96,320)
  FontSize(10)
  FText(-72,328,"lambda")
  Line(64,32,128,32)
  FontSize(10)
  FText(112,40,"Li1")
  If (numInputs > 1)
    Line(-32,-224,-96,-224)
    FontSize(10)
    FText(-72,-216,"Input 2")
    Line(64,64,128,64)
    FontSize(10)
    FText(112,72,"Li2")
    If (numInputs > 2)
      Line(-32,-192,-96,-192)
      FontSize(10)
      FText(-72,-184,"Input3")
      Line(64,96,128,96)
      FontSize(10)
      FText(112,104,"Li3")
      If (numInputs>3)
        Line(-32,-160,-96,-160)
        Line(64,128,128,128)
        FontSize(10)
        FText(112,136,"Li4")
        FontSize(10)
        FText(-72,-152,"input4")
        If (numInputs>4)
          Line(-32,-128,-96,-128)
          FontSize(10)
          FText(-72,-120,"input5")
          Line(64,160,128,160)
          FontSize(10)
          FText(112,168,"Li5")
          If (numInputs>5)
            Line(-32,-96,-96,-96)
            FontSize(10)
            FText(-72,-88,"input6")
            Line(64,192,128,192)
            FontSize(10)
            FText(112,200,"Li6")
            If (numInputs>6)
              Line(-32,-64,-96,-64)
              FontSize(10)
              FText(-72,-56,"Input7")
              Line(64,224,128,224)
              FontSize(10)
              FText(112,232,"Li7")
              If (numInputs>7)
                FontSize(10)
                FText(-72,-24,"Input 8")
                Line(-32,-32,-96,-32)
                Line(64,256,128,256)
                FontSize(10)
                FText(112,264,"Li8")
                If (numInputs>8)
                  Line(-32,0,-96,0)
                  FontSize(10)
                  FText(-72,8,"Input 9")
                  Line(64,288,128,288)
                  FontSize(10)
                  FText(112,296,"Li9")
                  If (numInputs>9)
                    Line(-32,32,-96,32)
                    FontSize(10)
                    FText(-72,40,"input 10")
                    Line(64,320,128,320)
                    FontSize(10)
                    FText(120,328,"Li10")
                  EndIf
                EndIf
              EndIf
            EndIf
          EndIf
        EndIf
      EndIf
    EndIf
  EndIf
  If (numOutputs > 1)
    Line(64,-224,128,-224)
    FontSize(10)
    FText(112,-216,"y2")
    FontSize(10)
    FText(-64,136,"Loss y2")
    Line(-96,128,-32,128)
    If (numOutputs> 2)
      Line(64,-192,128,-192)
      FontSize(10)
      FText(112,-184,"y3")
      FontSize(10)
      FText(-64,168,"Loss y3")
      Line(-96,160,-32,160)
      If (numOutputs>3)
        Line(64,-160,128,-160)
        FontSize(10)
        FText(112,-152,"y4")
        FontSize(10)
        FText(-64,200,"Loss y4")
        Line(-96,192,-32,192)
        If (numOutputs>4)
          Line(64,-128,128,-128)
          FontSize(10)
          FText(112,-120,"y5")
          FontSize(10)
          FText(-64,232,"Loss y5")
          Line(-96,224,-32,224)
          If (numOutputs> 5)
            Line(64,-96,128,-96)
            FontSize(10)
            FText(112,-88,"y6")
            Line(-96,256,-32,256)
            FontSize(10)
            FText(-64,264,"Loss y6")
          EndIf
        EndIf
      EndIf
    EndIf
  EndIf
  Line(-96,96,-32,96)
  FontSize(10)
  FText(-64,104,"Loss y1")

NODES:
  INITIALIZE_NODE Learning_rate = _dud_
  INITIALIZE_NODE input1        = _dud_
  INITIALIZE_NODE L1            = _dud_
  INITIALIZE_NODE foutput       = _dud_
  INITIALIZE_NODE lamm          = _dud_
  INITIALIZE_NODE Li1           = _dud_
  INITIALIZE_NODE input2        = _dud_
  INITIALIZE_NODE Li2           = _dud_
  INITIALIZE_NODE input3        = _dud_
  INITIALIZE_NODE Li3           = _dud_
  INITIALIZE_NODE input4        = _dud_
  INITIALIZE_NODE Li4           = _dud_
  INITIALIZE_NODE input5        = _dud_
  INITIALIZE_NODE Li5           = _dud_
  INITIALIZE_NODE input6        = _dud_
  INITIALIZE_NODE Li6           = _dud_
  INITIALIZE_NODE input7        = _dud_
  INITIALIZE_NODE Li7           = _dud_
  INITIALIZE_NODE input8        = _dud_
  INITIALIZE_NODE Li8           = _dud_
  INITIALIZE_NODE input9        = _dud_
  INITIALIZE_NODE Li9           = _dud_
  INITIALIZE_NODE input10       = _dud_
  INITIALIZE_NODE Li10          = _dud_
  INITIALIZE_NODE foutput2      = _dud_
  INITIALIZE_NODE L2            = _dud_
  INITIALIZE_NODE foutput3      = _dud_
  INITIALIZE_NODE L3            = _dud_
  INITIALIZE_NODE L4            = _dud_
  INITIALIZE_NODE foutput4      = _dud_
  INITIALIZE_NODE L5            = _dud_
  INITIALIZE_NODE foutput5      = _dud_
  INITIALIZE_NODE foutput6      = _dud_
  INITIALIZE_NODE L6            = _dud_

  Learning_rate -3 9 INPUT REAL
  input1 -3 -8 INPUT REAL
  L1 -3 3 INPUT REAL
  foutput 4 -8 OUTPUT REAL
  lamm -3 10 INPUT REAL
  Li1 4 1 OUTPUT REAL
  #IF numInputs>1
    input2 -3 -7 INPUT REAL
    Li2 4 2 OUTPUT REAL
    #IF numInputs>2
      input3 -3 -6 INPUT REAL
      Li3 4 3 OUTPUT REAL
      #IF numInputs>3
        input4 -3 -5 INPUT REAL
        Li4 4 4 OUTPUT REAL
        #IF numInputs>4
          input5 -3 -4 INPUT REAL
          Li5 4 5 OUTPUT REAL
          #IF numInputs>5
            input6 -3 -3 INPUT REAL
            Li6 4 6 OUTPUT REAL
            #IF numInputs>6
              input7 -3 -2 INPUT REAL
              Li7 4 7 OUTPUT REAL
              #IF numInputs>7
                input8 -3 -1 INPUT REAL
                Li8 4 8 OUTPUT REAL
                #IF numInputs>8
                  input9 -3 0 INPUT REAL
                  Li9 4 9 OUTPUT REAL
                  #IF numInputs>9
                    input10 -3 1 INPUT REAL
                    Li10 4 10 OUTPUT REAL
                  #END
                #END
              #END
            #END
          #END
        #END
      #END
    #END
  #END
  #IF numOutputs>1
    foutput2 4 -7 OUTPUT REAL
    L2 -3 4 INPUT REAL
    #IF numOutputs>2
      foutput3 4 -6 OUTPUT REAL
      L3 -3 5 INPUT REAL
      #IF numOutputs>3
        L4 -3 6 INPUT REAL
        foutput4 4 -5 OUTPUT REAL
        #IF numOutputs>4
          L5 -3 7 INPUT REAL
          foutput5 4 -4 OUTPUT REAL
          #IF numOutputs>5
            foutput6 4 -3 OUTPUT REAL
            L6 -3 8 INPUT REAL
          #END
        #END
      #END
    #END
  #END

VALVE-GROUP:
  #IF  AddDense ==0
    RTDS.CTL.RISC_CMODEL
        V4COMP: ModelName = OutputLv2 SubSystem = $SS Processor = $ctrlGrp Priority = $Pri
        DATA_SIZES: INTDATA=3 FLOATDATA=0 CHARDATA_FRMT=0 INVARS=18 OUTVARS=16
        INTDATA: $numInputs numInputs $numOutputs numOutputs $activation activation
        INVARS: $Learning_rate IEEE Learning_rate $input1 IEEE input1 $L1 IEEE L1 $lamm IEEE lam $input2 IEEE input2
        INVARS: $input3 IEEE input3 $input4 IEEE input4 $input5 IEEE input5 $input6 IEEE input6 $input7 IEEE input7
        INVARS: $input8 IEEE input8 $input9 IEEE input9 $input10 IEEE input10 $L2 IEEE L2 $L3 IEEE L3
        INVARS: $L4 IEEE L4 $L5 IEEE L5 $L6 IEEE L6
        OUTVARS: $foutput IEEE foutput $Li1 IEEE Li1 $Li2 IEEE Li2 $Li3 IEEE Li3 $Li4 IEEE Li4
        OUTVARS: $Li5 IEEE Li5 $Li6 IEEE Li6 $Li7 IEEE Li7 $Li8 IEEE Li8 $Li9 IEEE Li9
        OUTVARS: $Li10 IEEE Li10 $foutput2 IEEE foutput2 $foutput3 IEEE foutput3 $foutput4 IEEE foutput4 $foutput5 IEEE foutput5
        OUTVARS: $foutput6 IEEE foutput6
    END

  #ELSE 
    #IF  activation==LINEAR
      RTDS.CTL.RISC_CMODEL
          V4COMP: ModelName = OutputLv2LinDense SubSystem = $SS Processor = $ctrlGrp Priority = $Pri
          DATA_SIZES: INTDATA=5 FLOATDATA=0 CHARDATA_FRMT=0 INVARS=18 OUTVARS=16
          INTDATA: $numInputs numInputs $numOutputs numOutputs $AddDense AddDense $CrossCouple CrossCouple $activation activation
          INVARS: $Learning_rate IEEE Learning_rate $input1 IEEE input1 $L1 IEEE L1 $lamm IEEE lam $input2 IEEE input2
          INVARS: $input3 IEEE input3 $input4 IEEE input4 $input5 IEEE input5 $input6 IEEE input6 $input7 IEEE input7
          INVARS: $input8 IEEE input8 $input9 IEEE input9 $input10 IEEE input10 $L2 IEEE L2 $L3 IEEE L3
          INVARS: $L4 IEEE L4 $L5 IEEE L5 $L6 IEEE L6
          OUTVARS: $foutput IEEE foutput $Li1 IEEE Li1 $Li2 IEEE Li2 $Li3 IEEE Li3 $Li4 IEEE Li4
          OUTVARS: $Li5 IEEE Li5 $Li6 IEEE Li6 $Li7 IEEE Li7 $Li8 IEEE Li8 $Li9 IEEE Li9
          OUTVARS: $Li10 IEEE Li10 $foutput2 IEEE foutput2 $foutput3 IEEE foutput3 $foutput4 IEEE foutput4 $foutput5 IEEE foutput5
          OUTVARS: $foutput6 IEEE foutput6
      END

    #ELSEIF  activation==SIG
      RTDS.CTL.RISC_CMODEL
          V4COMP: ModelName = OutputLv2SigDense SubSystem = $SS Processor = $ctrlGrp Priority = $Pri
          DATA_SIZES: INTDATA=5 FLOATDATA=0 CHARDATA_FRMT=0 INVARS=18 OUTVARS=16
          INTDATA: $numInputs numInputs $numOutputs numOutputs $AddDense AddDense $CrossCouple CrossCouple $activation activation
          INVARS: $Learning_rate IEEE Learning_rate $input1 IEEE input1 $L1 IEEE L1 $lamm IEEE lam $input2 IEEE input2
          INVARS: $input3 IEEE input3 $input4 IEEE input4 $input5 IEEE input5 $input6 IEEE input6 $input7 IEEE input7
          INVARS: $input8 IEEE input8 $input9 IEEE input9 $input10 IEEE input10 $L2 IEEE L2 $L3 IEEE L3
          INVARS: $L4 IEEE L4 $L5 IEEE L5 $L6 IEEE L6
          OUTVARS: $foutput IEEE foutput $Li1 IEEE Li1 $Li2 IEEE Li2 $Li3 IEEE Li3 $Li4 IEEE Li4
          OUTVARS: $Li5 IEEE Li5 $Li6 IEEE Li6 $Li7 IEEE Li7 $Li8 IEEE Li8 $Li9 IEEE Li9
          OUTVARS: $Li10 IEEE Li10 $foutput2 IEEE foutput2 $foutput3 IEEE foutput3 $foutput4 IEEE foutput4 $foutput5 IEEE foutput5
          OUTVARS: $foutput6 IEEE foutput6
      END

    #ELSE 
      RTDS.CTL.RISC_CMODEL
          V4COMP: ModelName = OutputLv2TanhDense SubSystem = $SS Processor = $ctrlGrp Priority = $Pri
          DATA_SIZES: INTDATA=5 FLOATDATA=0 CHARDATA_FRMT=0 INVARS=18 OUTVARS=16
          INTDATA: $numInputs numInputs $numOutputs numOutputs $AddDense AddDense $CrossCouple CrossCouple $activation activation
          INVARS: $Learning_rate IEEE Learning_rate $input1 IEEE input1 $L1 IEEE L1 $lamm IEEE lam $input2 IEEE input2
          INVARS: $input3 IEEE input3 $input4 IEEE input4 $input5 IEEE input5 $input6 IEEE input6 $input7 IEEE input7
          INVARS: $input8 IEEE input8 $input9 IEEE input9 $input10 IEEE input10 $L2 IEEE L2 $L3 IEEE L3
          INVARS: $L4 IEEE L4 $L5 IEEE L5 $L6 IEEE L6
          OUTVARS: $foutput IEEE foutput $Li1 IEEE Li1 $Li2 IEEE Li2 $Li3 IEEE Li3 $Li4 IEEE Li4
          OUTVARS: $Li5 IEEE Li5 $Li6 IEEE Li6 $Li7 IEEE Li7 $Li8 IEEE Li8 $Li9 IEEE Li9
          OUTVARS: $Li10 IEEE Li10 $foutput2 IEEE foutput2 $foutput3 IEEE foutput3 $foutput4 IEEE foutput4 $foutput5 IEEE foutput5
          OUTVARS: $foutput6 IEEE foutput6
      END

    #END 
  #END 
COMPONENT-DESCRIPTORS:
  CLASSIFICATION: GENERAL
  PHASES:         N/A
  MAINSTEP:       YES
  SUBSTEP:        NO
  SUPERSTEP:      NO
  SMALLDT:        NO
  GPES:           NO
  TWRT:           NO
  DIST:           NO
  DEPRECATED:     NO

